// Code generated by girgen. DO NOT EDIT.

package gtksource

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <gtksourceview/gtksource.h>
import "C"

// EncodingGetDefaultCandidates gets the list of default
// candidate encodings to try when loading a file. See
// gtk_source_file_loader_set_candidate_encodings().
//
// This function returns a different list depending on the current locale (i.e.
// language, country and default encoding). The UTF-8 encoding and the current
// locale encoding are guaranteed to be present in the returned list.
//
// The function returns the following values:
//
//   - sList: list of default candidate encodings. Free with g_slist_free().
//
func EncodingGetDefaultCandidates() []*Encoding {
	var _cret *C.GSList // in

	_cret = C.gtk_source_encoding_get_default_candidates()

	var _sList []*Encoding // out

	_sList = make([]*Encoding, 0, gextras.SListSize(unsafe.Pointer(_cret)))
	gextras.MoveSList(unsafe.Pointer(_cret), true, func(v unsafe.Pointer) {
		src := (*C.GtkSourceEncoding)(v)
		var dst *Encoding // out
		dst = (*Encoding)(gextras.NewStructNative(unsafe.Pointer(src)))
		_sList = append(_sList, dst)
	})

	return _sList
}
