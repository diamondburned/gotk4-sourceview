// Code generated by girgen. DO NOT EDIT.

package gtksource

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gdk/v4"
	"github.com/diamondburned/gotk4/pkg/gtk/v4"
)

// #include <stdlib.h>
// #include <gtksourceview/gtksource.h>
import "C"

//export _gotk4_gtksource5_GutterRenderer_ConnectActivate
func _gotk4_gtksource5_GutterRenderer_ConnectActivate(arg0 C.gpointer, arg1 *C.GtkTextIter, arg2 *C.GdkRectangle, arg3 C.guint, arg4 C.GdkModifierType, arg5 C.gint, arg6 C.guintptr) {
	var f func(iter *gtk.TextIter, area *gdk.Rectangle, button uint, state gdk.ModifierType, nPresses int)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg6))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(iter *gtk.TextIter, area *gdk.Rectangle, button uint, state gdk.ModifierType, nPresses int))
	}

	var _iter *gtk.TextIter     // out
	var _area *gdk.Rectangle    // out
	var _button uint            // out
	var _state gdk.ModifierType // out
	var _nPresses int           // out

	_iter = (*gtk.TextIter)(gextras.NewStructNative(unsafe.Pointer(arg1)))
	_area = (*gdk.Rectangle)(gextras.NewStructNative(unsafe.Pointer(arg2)))
	_button = uint(arg3)
	_state = gdk.ModifierType(arg4)
	_nPresses = int(arg5)

	f(_iter, _area, _button, _state, _nPresses)
}

//export _gotk4_gtksource5_GutterRenderer_ConnectQueryActivatable
func _gotk4_gtksource5_GutterRenderer_ConnectQueryActivatable(arg0 C.gpointer, arg1 *C.GtkTextIter, arg2 *C.GdkRectangle, arg3 C.guintptr) (cret C.gboolean) {
	var f func(iter *gtk.TextIter, area *gdk.Rectangle) (ok bool)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg3))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(iter *gtk.TextIter, area *gdk.Rectangle) (ok bool))
	}

	var _iter *gtk.TextIter  // out
	var _area *gdk.Rectangle // out

	_iter = (*gtk.TextIter)(gextras.NewStructNative(unsafe.Pointer(arg1)))
	_area = (*gdk.Rectangle)(gextras.NewStructNative(unsafe.Pointer(arg2)))

	ok := f(_iter, _area)

	var _ bool

	if ok {
		cret = C.TRUE
	}

	return cret
}
