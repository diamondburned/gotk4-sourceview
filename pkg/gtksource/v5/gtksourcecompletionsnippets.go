// Code generated by girgen. DO NOT EDIT.

package gtksource

import (
	"unsafe"

	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtksourceview/gtksource.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.gtk_source_completion_snippets_get_type()), F: marshalCompletionSnippetser},
	})
}

type CompletionSnippets struct {
	_ [0]func() // equal guard
	*externglib.Object

	CompletionProvider
}

var (
	_ externglib.Objector = (*CompletionSnippets)(nil)
)

func wrapCompletionSnippets(obj *externglib.Object) *CompletionSnippets {
	return &CompletionSnippets{
		Object: obj,
		CompletionProvider: CompletionProvider{
			Object: obj,
		},
	}
}

func marshalCompletionSnippetser(p uintptr) (interface{}, error) {
	return wrapCompletionSnippets(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// The function returns the following values:
//
func NewCompletionSnippets() *CompletionSnippets {
	var _cret *C.GtkSourceCompletionSnippets // in

	_cret = C.gtk_source_completion_snippets_new()

	var _completionSnippets *CompletionSnippets // out

	_completionSnippets = wrapCompletionSnippets(externglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _completionSnippets
}
