// Code generated by girgen. DO NOT EDIT.

package gtksource

import (
	"runtime"
	"unsafe"

	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gtk/v4"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gtksourceview/gtksource.h>
import "C"

// glib.Type values for gtksourcehoverdisplay.go.
var GTypeHoverDisplay = externglib.Type(C.gtk_source_hover_display_get_type())

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: GTypeHoverDisplay, F: marshalHoverDisplay},
	})
}

// HoverDisplayOverrider contains methods that are overridable.
type HoverDisplayOverrider interface {
}

type HoverDisplay struct {
	_ [0]func() // equal guard
	gtk.Widget
}

var (
	_ gtk.Widgetter = (*HoverDisplay)(nil)
)

func classInitHoverDisplayer(gclassPtr, data C.gpointer) {
	C.g_type_class_add_private(gclassPtr, C.gsize(unsafe.Sizeof(uintptr(0))))

	goffset := C.g_type_class_get_instance_private_offset(gclassPtr)
	*(*C.gpointer)(unsafe.Add(unsafe.Pointer(gclassPtr), goffset)) = data

}

func wrapHoverDisplay(obj *externglib.Object) *HoverDisplay {
	return &HoverDisplay{
		Widget: gtk.Widget{
			InitiallyUnowned: externglib.InitiallyUnowned{
				Object: obj,
			},
			Object: obj,
			Accessible: gtk.Accessible{
				Object: obj,
			},
			Buildable: gtk.Buildable{
				Object: obj,
			},
			ConstraintTarget: gtk.ConstraintTarget{
				Object: obj,
			},
		},
	}
}

func marshalHoverDisplay(p uintptr) (interface{}, error) {
	return wrapHoverDisplay(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// The function takes the following parameters:
//
func (self *HoverDisplay) Append(child gtk.Widgetter) {
	var _arg0 *C.GtkSourceHoverDisplay // out
	var _arg1 *C.GtkWidget             // out

	_arg0 = (*C.GtkSourceHoverDisplay)(unsafe.Pointer(externglib.InternObject(self).Native()))
	_arg1 = (*C.GtkWidget)(unsafe.Pointer(externglib.InternObject(child).Native()))

	C.gtk_source_hover_display_append(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(child)
}

// The function takes the following parameters:
//
//    - child
//    - sibling
//
func (self *HoverDisplay) InsertAfter(child, sibling gtk.Widgetter) {
	var _arg0 *C.GtkSourceHoverDisplay // out
	var _arg1 *C.GtkWidget             // out
	var _arg2 *C.GtkWidget             // out

	_arg0 = (*C.GtkSourceHoverDisplay)(unsafe.Pointer(externglib.InternObject(self).Native()))
	_arg1 = (*C.GtkWidget)(unsafe.Pointer(externglib.InternObject(child).Native()))
	_arg2 = (*C.GtkWidget)(unsafe.Pointer(externglib.InternObject(sibling).Native()))

	C.gtk_source_hover_display_insert_after(_arg0, _arg1, _arg2)
	runtime.KeepAlive(self)
	runtime.KeepAlive(child)
	runtime.KeepAlive(sibling)
}

// The function takes the following parameters:
//
func (self *HoverDisplay) Prepend(child gtk.Widgetter) {
	var _arg0 *C.GtkSourceHoverDisplay // out
	var _arg1 *C.GtkWidget             // out

	_arg0 = (*C.GtkSourceHoverDisplay)(unsafe.Pointer(externglib.InternObject(self).Native()))
	_arg1 = (*C.GtkWidget)(unsafe.Pointer(externglib.InternObject(child).Native()))

	C.gtk_source_hover_display_prepend(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(child)
}

// The function takes the following parameters:
//
func (self *HoverDisplay) Remove(child gtk.Widgetter) {
	var _arg0 *C.GtkSourceHoverDisplay // out
	var _arg1 *C.GtkWidget             // out

	_arg0 = (*C.GtkSourceHoverDisplay)(unsafe.Pointer(externglib.InternObject(self).Native()))
	_arg1 = (*C.GtkWidget)(unsafe.Pointer(externglib.InternObject(child).Native()))

	C.gtk_source_hover_display_remove(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(child)
}
